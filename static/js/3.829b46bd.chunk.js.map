{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.js","components/Profile/MyPosts/AddNewPostForm/AddNewPostForm.js","components/Profile/MyPosts/MyPosts.js","components/Profile/MyPosts/MyPostsContainer.js","components/Profile/ProfileInfo/ProfileStatus/ProfileStatusWithHooks.js","components/Profile/ProfileInfo/ProfileDataForm/ProfileDataForm.js","components/Profile/ProfileInfo/ProfileData/ProfileData.js","components/Profile/ProfileInfo/ProfileInfo.js","components/Profile/Profile.js","components/Profile/ProfileContainer.js"],"names":["module","exports","Post","message","likesCount","className","classes","item","src","alt","maxLength10","maxLength","AddNewPostForm","props","onSubmit","handleSubmit","Field","component","Textarea","name","placeholder","validate","required","reduxForm","form","MyPosts","React","memo","postElements","posts","map","post","key","id","postsBlock","values","addPost","newPostText","MyPostsContainer","connect","state","profilePage","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","autoFocus","value","onChange","event","currentTarget","onBlur","updateStatus","ProfileDataFormReduxForm","profile","error","form_summary_error","createField","Input","type","contacts","Object","keys","Contact","contactTitle","contactValue","ProfileData","isOwner","goToEditMode","onClick","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","ProfileInfo","savePhoto","saveProfile","Preloader","description_block","photo_wrap","photos","large","userPhoto","main_photo","target","files","length","initialValues","formData","then","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.829b46bd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"description_block\":\"ProfileInfo_description_block__uPEls\",\"photo_wrap\":\"ProfileInfo_photo_wrap__3J8gj\",\"main_photo\":\"ProfileInfo_main_photo__3mrLZ\",\"contacts\":\"ProfileInfo_contacts__O92mj\",\"form_summary_error\":\"ProfileInfo_form_summary_error__3f-hx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3Vcn5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__3cT7M\",\"posts\":\"MyPosts_posts__21WXv\"};","import React from 'react'\r\nimport './Post.module.css'\r\nimport classes from './Post.module.css'\r\n\r\nconst Post = ({ message, likesCount }) => {\r\n\treturn (\r\n\t\t<div className={classes.item}>\r\n\t\t\t<img\r\n\t\t\t\tsrc=\"https://s3.amazonaws.com/liberty-uploads/wp-content/uploads/sites/1218/2015/09/avatarsucks.jpg\"\r\n\t\t\t\talt=\"\"\r\n\t\t\t/>\r\n\t\t\t{message}\r\n\t\t\t<div>\r\n\t\t\t\t<span>likes: {likesCount}</span>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Post\r\n","import React from 'react'\r\nimport { maxLength, required } from '../../../../utils/validators/validators'\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport { Textarea } from '../../../common/FormsControls/FormsControls'\r\n\r\nconst maxLength10 = maxLength(10)\r\n\r\nlet AddNewPostForm = props => {\r\n\treturn (\r\n\t\t<form onSubmit={props.handleSubmit}>\r\n\t\t\t<Field\r\n\t\t\t\tcomponent={Textarea}\r\n\t\t\t\tname=\"newPostText\"\r\n\t\t\t\tplaceholder=\"Enter your post\"\r\n\t\t\t\tvalidate={[required, maxLength10]}\r\n\t\t\t/>\r\n\t\t\t<div>\r\n\t\t\t\t<button>Add post</button>\r\n\t\t\t</div>\r\n\t\t</form>\r\n\t)\r\n}\r\n\r\nAddNewPostForm = reduxForm({\r\n\tform: 'ProfileAddNewPostForm',\r\n})(AddNewPostForm)\r\n\r\nexport default AddNewPostForm\r\n","import React from 'react'\r\nimport classes from './MyPosts.module.css'\r\nimport Post from './Post/Post'\r\nimport AddNewPostForm from './AddNewPostForm/AddNewPostForm'\r\n\r\nconst MyPosts = React.memo(props => {\r\n\tconst postElements = props.posts.map(post => (\r\n\t\t<Post message={post.message} likesCount={post.likesCount} key={post.id} />\r\n\t))\r\n\r\n\tconst onAddPost = values => {\r\n\t\tprops.addPost(values.newPostText)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={classes.postsBlock}>\r\n\t\t\t<h3>My posts</h3>\r\n\t\t\t<div>\r\n\t\t\t\t<AddNewPostForm onSubmit={onAddPost} />\r\n\t\t\t</div>\r\n\t\t\t<div className={classes.posts}>{postElements}</div>\r\n\t\t</div>\r\n\t)\r\n})\r\n\r\nexport default MyPosts\r\n","import { addPost } from '../../../redux/profileReducer'\r\nimport MyPosts from './MyPosts'\r\nimport { connect } from 'react-redux'\r\n\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n\t\tposts: state.profilePage.posts,\r\n\t\tnewPostText: state.profilePage.newPostText,\r\n\t}\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, {\r\n\taddPost,\r\n})(MyPosts)\r\n\r\nexport default MyPostsContainer\r\n","import React, { useEffect, useState } from 'react'\r\n\r\nconst ProfileStatusWithHooks = props => {\r\n\tconst [editMode, setEditMode] = useState(false)\r\n\tconst [status, setStatus] = useState(props.status)\r\n\r\n\tconst activateEditMode = () => {\r\n\t\tsetEditMode(true)\r\n\t}\r\n\r\n\tconst deactivateEditMode = () => {\r\n\t\tsetEditMode(false)\r\n\t\tprops.updateStatus(status)\r\n\t}\r\n\r\n\tconst onStatusChange = event => {\r\n\t\tsetStatus(event.currentTarget.value)\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tsetStatus(props.status)\r\n\t}, [props.status])\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{!editMode && (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<span onDoubleClick={activateEditMode}>\r\n\t\t\t\t\t\t<strong>Status:</strong> {props.status || '-----'}\r\n\t\t\t\t\t</span>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\r\n\t\t\t{editMode && (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tautoFocus={true}\r\n\t\t\t\t\t\tvalue={status}\r\n\t\t\t\t\t\tonChange={onStatusChange}\r\n\t\t\t\t\t\tonBlur={deactivateEditMode}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default ProfileStatusWithHooks\r\n","import React from 'react'\r\nimport {\r\n\tcreateField,\r\n\tInput,\r\n\tTextarea,\r\n} from '../../../common/FormsControls/FormsControls'\r\nimport { reduxForm } from 'redux-form'\r\nimport classes from '../ProfileInfo.module.css'\r\n\r\nconst ProfileDataForm = ({ handleSubmit, profile, error }) => (\r\n\t<form onSubmit={handleSubmit}>\r\n\t\t<div>\r\n\t\t\t<button>Save</button>\r\n\t\t</div>\r\n\t\t{error && <div className={classes.form_summary_error}>{error}</div>}\r\n\t\t<div>\r\n\t\t\t<b>Full name:</b>\r\n\t\t\t{createField('Full name', 'fullName', [], Input)}\r\n\t\t</div>\r\n\t\t<div>\r\n\t\t\t<b>Looking for a job:</b>\r\n\t\t\t{createField('', 'lookingForAJob', [], Input, { type: 'checkbox' })}\r\n\t\t</div>\r\n\t\t<div>\r\n\t\t\t<b>My professional skills:</b>\r\n\t\t\t{createField(\r\n\t\t\t\t'My professional skills',\r\n\t\t\t\t'lookingForAJobDescription',\r\n\t\t\t\t[],\r\n\t\t\t\tTextarea\r\n\t\t\t)}\r\n\t\t</div>\r\n\t\t<div>\r\n\t\t\t<b>About me:</b>\r\n\t\t\t{createField('About me:', 'aboutMe', [], Textarea)}\r\n\t\t</div>\r\n\t\t<div>\r\n\t\t\t<b>Contacts:</b>{' '}\r\n\t\t\t<ul className={classes.contacts}>\r\n\t\t\t\t{Object.keys(profile.contacts).map(key => (\r\n\t\t\t\t\t<li key={key}>\r\n\t\t\t\t\t\t<b>{key}</b> {createField(key, 'contacts.' + key, [], Input)}\r\n\t\t\t\t\t</li>\r\n\t\t\t\t))}\r\n\t\t\t</ul>\r\n\t\t</div>\r\n\t</form>\r\n)\r\n\r\nconst ProfileDataFormReduxForm = reduxForm({\r\n\tform: 'edit-profile',\r\n})(ProfileDataForm)\r\n\r\nexport default ProfileDataFormReduxForm\r\n","import classes from '../ProfileInfo.module.css'\r\nimport React from 'react'\r\n\r\nconst ProfileData = ({ profile, isOwner, goToEditMode }) => (\r\n\t<>\r\n\t\t{isOwner && (\r\n\t\t\t<div>\r\n\t\t\t\t<button onClick={goToEditMode}>Edit</button>\r\n\t\t\t</div>\r\n\t\t)}\r\n\t\t<div>\r\n\t\t\t<b>Full name:</b> {profile.fullName}\r\n\t\t</div>\r\n\t\t<div>\r\n\t\t\t<b>Looking for a job:</b> {profile.lookingForAJob ? 'yes' : 'no'}\r\n\t\t</div>\r\n\t\t<div>\r\n\t\t\t<b>My professional skills:</b> {profile.lookingForAJobDescription}\r\n\t\t</div>\r\n\t\t<div>\r\n\t\t\t<b>About me:</b> {profile.aboutMe}\r\n\t\t</div>\r\n\t\t<div>\r\n\t\t\t<b>Contacts:</b>{' '}\r\n\t\t\t<ul className={classes.contacts}>\r\n\t\t\t\t{Object.keys(profile.contacts).map(key => (\r\n\t\t\t\t\t<Contact\r\n\t\t\t\t\t\tkey={key}\r\n\t\t\t\t\t\tcontactTitle={key}\r\n\t\t\t\t\t\tcontactValue={profile.contacts[key]}\r\n\t\t\t\t\t/>\r\n\t\t\t\t))}\r\n\t\t\t</ul>\r\n\t\t</div>\r\n\t</>\r\n)\r\n\r\nconst Contact = ({ contactTitle, contactValue }) => (\r\n\t<li>\r\n\t\t<b>{contactTitle}</b>: {contactValue}\r\n\t</li>\r\n)\r\n\r\nexport default ProfileData\r\n","import React, { useState } from 'react'\r\nimport classes from './ProfileInfo.module.css'\r\nimport Preloader from '../../common/Preloader/Preloader'\r\n// import ProfileStatus from './ProfileStatus'\r\nimport ProfileStatusWithHooks from './ProfileStatus/ProfileStatusWithHooks'\r\nimport userPhoto from '../../../assets/images/user.png'\r\nimport ProfileDataFormReduxForm from './ProfileDataForm/ProfileDataForm'\r\nimport ProfileData from './ProfileData/ProfileData'\r\n\r\nconst ProfileInfo = ({\r\n\tprofile,\r\n\tstatus,\r\n\tupdateStatus,\r\n\tisOwner,\r\n\tsavePhoto,\r\n\tsaveProfile,\r\n}) => {\r\n\tconst [editMode, setEditMode] = useState(false)\r\n\r\n\tif (!profile) {\r\n\t\treturn <Preloader />\r\n\t}\r\n\r\n\tconst inMainPhotoSelected = event => {\r\n\t\tif (event.target.files.length) {\r\n\t\t\tsavePhoto(event.target.files[0])\r\n\t\t}\r\n\t}\r\n\r\n\tconst onSubmit = formData => {\r\n\t\tsaveProfile(formData).then(() => setEditMode(false))\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div className={classes.description_block}>\r\n\t\t\t\t<div className={classes.photo_wrap}>\r\n\t\t\t\t\t<img\r\n\t\t\t\t\t\tsrc={profile.photos.large || userPhoto}\r\n\t\t\t\t\t\talt={profile.fullName}\r\n\t\t\t\t\t\tclassName={classes.main_photo}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t{isOwner && <input type=\"file\" onChange={inMainPhotoSelected} />}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\r\n\r\n\t\t\t\t\t{editMode ? (\r\n\t\t\t\t\t\t<ProfileDataFormReduxForm\r\n\t\t\t\t\t\t\tinitialValues={profile}\r\n\t\t\t\t\t\t\tonSubmit={onSubmit}\r\n\t\t\t\t\t\t\tprofile={profile}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<ProfileData\r\n\t\t\t\t\t\t\tprofile={profile}\r\n\t\t\t\t\t\t\tisOwner={isOwner}\r\n\t\t\t\t\t\t\tgoToEditMode={() => setEditMode(true)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default ProfileInfo\r\n","import React, { Fragment } from 'react'\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer'\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo'\r\n\r\nconst Profile = ({\r\n\tisOwner,\r\n\tprofile,\r\n\tstatus,\r\n\tupdateStatus,\r\n\tsavePhoto,\r\n\tsaveProfile,\r\n}) => {\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<ProfileInfo\r\n\t\t\t\tprofile={profile}\r\n\t\t\t\tstatus={status}\r\n\t\t\t\tupdateStatus={updateStatus}\r\n\t\t\t\tisOwner={isOwner}\r\n\t\t\t\tsavePhoto={savePhoto}\r\n\t\t\t\tsaveProfile={saveProfile}\r\n\t\t\t/>\r\n\t\t\t<MyPostsContainer />\r\n\t\t</Fragment>\r\n\t)\r\n}\r\n\r\nexport default Profile\r\n","import React from 'react'\r\nimport Profile from './Profile'\r\nimport { connect } from 'react-redux'\r\nimport {\r\n\tgetStatus,\r\n\tgetUserProfile,\r\n\tsavePhoto,\r\n\tsaveProfile,\r\n\tupdateStatus,\r\n} from '../../redux/profileReducer'\r\nimport { withRouter } from 'react-router-dom'\r\n// import { withAuthRedirect } from '../../hoc/withAuthRedirect'\r\nimport { compose } from 'redux'\r\n\r\nclass ProfileContainer extends React.Component {\r\n\trefreshProfile() {\r\n\t\tlet userId = this.props.match.params.userId\r\n\t\tif (!userId) {\r\n\t\t\tuserId = this.props.authorizedUserId\r\n\t\t\tif (!userId) {\r\n\t\t\t\tthis.props.history.push('/login')\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.props.getUserProfile(userId)\r\n\t\tthis.props.getStatus(userId)\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.refreshProfile()\r\n\t}\r\n\r\n\tcomponentDidUpdate(prevProps, prevState, snapshot) {\r\n\t\tif (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n\t\t\tthis.refreshProfile()\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn <Profile isOwner={!this.props.match.params.userId} {...this.props} />\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n\t\tprofile: state.profilePage.profile,\r\n\t\tstatus: state.profilePage.status,\r\n\t\tauthorizedUserId: state.auth.userId,\r\n\t\tisAuth: state.auth.isAuth,\r\n\t}\r\n}\r\n\r\nexport default compose(\r\n\tconnect(mapStateToProps, {\r\n\t\tgetUserProfile,\r\n\t\tgetStatus,\r\n\t\tupdateStatus,\r\n\t\tsavePhoto,\r\n\t\tsaveProfile,\r\n\t}),\r\n\twithRouter\r\n\t// withAuthRedirect\r\n)(ProfileContainer)\r\n"],"sourceRoot":""}