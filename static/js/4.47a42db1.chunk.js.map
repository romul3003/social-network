{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.js","components/Dialogs/Message/Message.js","components/Dialogs/AddMessageForm/AddMessageForm.js","components/Dialogs/Dialogs.js","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.js"],"names":["module","exports","DialogItem","name","id","path","className","classes","dialog","to","link","activeClassName","active","Message","message","maxLength10","maxLength","AddMessageForm","props","onSubmit","handleSubmit","Field","component","Textarea","placeholder","validate","required","reduxForm","form","Dialogs","state","dialogsPage","dialogsElements","dialogs","map","user","key","messagesElements","messages","isAuth","dialogItems","values","sendMessage","newMessageBody","mapStateToPropsForRedirect","auth","compose","connect","Component","RedirectComponent","this","React"],"mappings":"2GACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,YAAc,6BAA6B,OAAS,wBAAwB,KAAO,sBAAsB,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,+FCmB/NC,EAhBI,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,KAAMC,EAAS,EAATA,GACrBC,EAAI,mBAAeD,GAEzB,OACC,yBAAKE,UAAWC,IAAQC,QACvB,kBAAC,IAAD,CACCC,GAAIJ,EACJC,UAAWC,IAAQG,KACnBC,gBAAiBJ,IAAQK,QAExBT,KCPUU,EAJC,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACf,yBAAKR,UAAWC,IAAQO,SAAUA,I,yCCC7BC,EAAcC,YAAU,IAE1BC,EAAiB,SAAAC,GACpB,OACC,0BAAMC,SAAUD,EAAME,cACrB,6BACC,kBAACC,EAAA,EAAD,CACCC,UAAWC,IACXpB,KAAK,iBACLqB,YAAY,qBACZC,SAAU,CAACC,IAAUX,MAGvB,6BACC,2CAUWE,EAJfA,EAAiBU,YAAU,CAC1BC,KAAM,wBADUD,CAEdV,GCQYY,EA5BC,SAAAX,GACf,IAAMY,EAAQZ,EAAMa,YAEdC,EAAkBF,EAAMG,QAAQC,KAAI,SAAAC,GAAI,OAC7C,kBAAC,EAAD,CAAY/B,GAAI+B,EAAK/B,GAAID,KAAMgC,EAAKhC,KAAMiC,IAAKD,EAAK/B,QAG/CiC,EAAmBP,EAAMQ,SAASJ,KAAI,SAAApB,GAAO,OAClD,kBAAC,EAAD,CAASA,QAASA,EAAQA,QAASsB,IAAKtB,EAAQV,QAOjD,OAAKc,EAAMqB,OAGV,yBAAKjC,UAAWC,IAAQ0B,SACvB,yBAAK3B,UAAWC,IAAQiC,aAAcR,GACtC,yBAAK1B,UAAWC,IAAQ+B,UACvB,6BAAMD,GACN,kBAAC,EAAD,CAAgBlB,SAXG,SAAAsB,GACrBvB,EAAMwB,YAAYD,EAAOE,qBAGA,kBAAC,IAAD,CAAUlC,GAAG,Y,gDClBlCmC,EAA6B,SAAAd,GAAK,MAAK,CAC5CS,OAAQT,EAAMe,KAAKN,S,OCOLO,sBACdC,aAPuB,SAAAjB,GACvB,MAAO,CACNC,YAAaD,EAAMC,eAKK,CACxBW,mBDN8B,SAAAM,GAAc,IACvCC,EADsC,iLAG1C,OAAKC,KAAKhC,MAAMqB,OAET,kBAACS,EAAcE,KAAKhC,OAFI,kBAAC,IAAD,CAAUT,GAAG,eAHF,GACZ0C,IAAMH,WAYtC,OAJuCD,YAAQH,EAARG,CACtCE,KCNaH,CAKbjB","file":"static/js/4.47a42db1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1V7k6\",\"dialogItems\":\"Dialogs_dialogItems__3bklg\",\"dialog\":\"Dialogs_dialog__3o4aJ\",\"link\":\"Dialogs_link__2riXz\",\"active\":\"Dialogs_active__2fQ1L\",\"messages\":\"Dialogs_messages__21eWP\",\"message\":\"Dialogs_message__1WkT-\"};","import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport classes from '../Dialogs.module.css'\n\nconst DialogItem = ({ name, id }) => {\n\tconst path = `/dialogs/${id}`\n\n\treturn (\n\t\t<div className={classes.dialog}>\n\t\t\t<NavLink\n\t\t\t\tto={path}\n\t\t\t\tclassName={classes.link}\n\t\t\t\tactiveClassName={classes.active}\n\t\t\t>\n\t\t\t\t{name}\n\t\t\t</NavLink>\n\t\t</div>\n\t)\n}\n\nexport default DialogItem\n","import React from 'react'\r\nimport classes from '../Dialogs.module.css'\r\n\r\nconst Message = ({ message }) => (\r\n\t<div className={classes.message}>{message}</div>\r\n)\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport { Textarea } from '../../common/FormsControls/FormsControls'\r\nimport { maxLength, required } from '../../../utils/validators/validators'\r\n\r\nconst maxLength10 = maxLength(10)\r\n\r\nlet AddMessageForm = props => {\r\n\treturn (\r\n\t\t<form onSubmit={props.handleSubmit}>\r\n\t\t\t<div>\r\n\t\t\t\t<Field\r\n\t\t\t\t\tcomponent={Textarea}\r\n\t\t\t\t\tname=\"newMessageBody\"\r\n\t\t\t\t\tplaceholder=\"Enter your message\"\r\n\t\t\t\t\tvalidate={[required, maxLength10]}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<button>Send</button>\r\n\t\t\t</div>\r\n\t\t</form>\r\n\t)\r\n}\r\n\r\nAddMessageForm = reduxForm({\r\n\tform: 'dialogAddMessageForm',\r\n})(AddMessageForm)\r\n\r\nexport default AddMessageForm\r\n","import React from 'react'\r\nimport classes from './Dialogs.module.css'\r\nimport DialogItem from './DialogItem/DialogItem'\r\nimport Message from './Message/Message'\r\nimport { Redirect } from 'react-router-dom'\r\nimport AddMessageForm from './AddMessageForm/AddMessageForm'\r\n\r\nconst Dialogs = props => {\r\n\tconst state = props.dialogsPage\r\n\r\n\tconst dialogsElements = state.dialogs.map(user => (\r\n\t\t<DialogItem id={user.id} name={user.name} key={user.id} />\r\n\t))\r\n\r\n\tconst messagesElements = state.messages.map(message => (\r\n\t\t<Message message={message.message} key={message.id} />\r\n\t))\r\n\r\n\tconst addNewMessage = values => {\r\n\t\tprops.sendMessage(values.newMessageBody)\r\n\t}\r\n\r\n\tif (!props.isAuth) return <Redirect to=\"/login\" />\r\n\r\n\treturn (\r\n\t\t<div className={classes.dialogs}>\r\n\t\t\t<div className={classes.dialogItems}>{dialogsElements}</div>\r\n\t\t\t<div className={classes.messages}>\r\n\t\t\t\t<div>{messagesElements}</div>\r\n\t\t\t\t<AddMessageForm onSubmit={addNewMessage} />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Dialogs\r\n","import React from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\n\r\nconst mapStateToPropsForRedirect = state => ({\r\n\tisAuth: state.auth.isAuth,\r\n})\r\n\r\nexport const withAuthRedirect = Component => {\r\n\tclass RedirectComponent extends React.Component {\r\n\t\trender() {\r\n\t\t\tif (!this.props.isAuth) return <Redirect to=\"/login\" />\r\n\r\n\t\t\treturn <Component {...this.props} />\r\n\t\t}\r\n\t}\r\n\r\n\tconst ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(\r\n\t\tRedirectComponent\r\n\t)\r\n\r\n\treturn ConnectedAuthRedirectComponent\r\n}\r\n","import { sendMessage } from '../../redux/dialogsReducer'\r\nimport Dialogs from './Dialogs'\r\nimport { connect } from 'react-redux'\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect'\r\nimport { compose } from 'redux'\r\n\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n\t\tdialogsPage: state.dialogsPage,\r\n\t}\r\n}\r\n\r\nexport default compose(\r\n\tconnect(mapStateToProps, {\r\n\t\tsendMessage,\r\n\t}),\r\n\twithAuthRedirect\r\n)(Dialogs)\r\n"],"sourceRoot":""}